pipeline {
  options {
    disableConcurrentBuilds(abortPrevious: true)
    newContainerPerStage()
  }
  triggers {
    issueCommentTrigger('.*do: test')
  }
  agent none
  stages {
    stage('Build') {
      parallel {
        stage('rocm-ndebug-orange') {
          agent {
            docker {
              image 'celeritas/ci-centos7-rocm5:2022-12-14.2'
              label 'AMD_Radeon_Instinct_MI100 && rocm-docker'
              args '--device=/dev/kfd --device=/dev/dri --security-opt seccomp=unconfined'
            }
          }
          steps {
            sh 'entrypoint-shell ./scripts/ci/run-ci.sh centos-rocm ndebug-orange'
          }
          post {
            always {
              xunit reduceLog: false, tools:[CTest(deleteOutputFiles: true, failIfNotNew: true, pattern: 'build/Testing/**/*.xml', skipNoTestFiles: false, stopProcessingIfError: true)]
            }
          }
        }
        stage('rocm-ndebug-orange-float') {
          agent {
            docker {
              image 'celeritas/ci-centos7-rocm5:2022-12-14.2'
              label 'AMD_Radeon_Instinct_MI100 && rocm-docker'
              args '--device=/dev/kfd --device=/dev/dri --security-opt seccomp=unconfined'
            }
          }
          steps {
            sh 'entrypoint-shell ./scripts/ci/run-ci.sh centos-rocm ndebug-orange-float'
          }
          post {
            always {
              xunit reduceLog: false, tools:[CTest(deleteOutputFiles: true, failIfNotNew: true, pattern: 'build/Testing/**/*.xml', skipNoTestFiles: false, stopProcessingIfError: true)]
            }
          }
        }
        stage('cuda-debug-orange') {
          agent {
            docker {
              image 'celeritas/ci-jammy-cuda11:2023-08-02'
              label 'NVIDIA_Tesla_V100-PCIE-32GB && nvidia-docker && large_images'
            }
          }
          steps {
            sh 'entrypoint-shell ./scripts/ci/run-ci.sh ubuntu-cuda debug-orange'
          }
          post {
            always {
              xunit reduceLog: false, tools:[CTest(deleteOutputFiles: true, failIfNotNew: true, pattern: 'build/Testing/**/Test.xml', skipNoTestFiles: false, stopProcessingIfError: true)]
            }
          }
        }
        stage('cuda-ndebug-orange') {
          agent {
            docker {
              image 'celeritas/ci-jammy-cuda11:2023-08-02'
              label 'NVIDIA_Tesla_V100-PCIE-32GB && nvidia-docker && large_images'
            }
          }
          steps {
            sh 'entrypoint-shell ./scripts/ci/run-ci.sh ubuntu-cuda ndebug-orange'
          }
          post {
            always {
              xunit reduceLog: false, tools:[CTest(deleteOutputFiles: true, failIfNotNew: true, pattern: 'build/Testing/**/Test.xml', skipNoTestFiles: false, stopProcessingIfError: true)]
            }
          }
        }
        stage('cuda-debug-vecgeom') {
          agent {
            docker {
              image 'celeritas/ci-jammy-cuda11:2023-08-02'
              label 'NVIDIA_Tesla_V100-PCIE-32GB && nvidia-docker && large_images'
            }
          }
          steps {
            sh 'entrypoint-shell ./scripts/ci/run-ci.sh ubuntu-cuda debug-vecgeom'
          }
          post {
            always {
              xunit reduceLog: false, tools:[CTest(deleteOutputFiles: true, failIfNotNew: true, pattern: 'build/Testing/**/Test.xml', skipNoTestFiles: false, stopProcessingIfError: true)]
            }
          }
        }
        stage('cuda-reldeb-vecgeom') {
          agent {
            docker {
              image 'celeritas/ci-jammy-cuda11:2023-08-02'
              label 'NVIDIA_Tesla_V100-PCIE-32GB && nvidia-docker && large_images'
            }
          }
          steps {
            sh 'entrypoint-shell ./scripts/ci/run-ci.sh ubuntu-cuda reldeb-vecgeom'
          }
          post {
            always {
              xunit reduceLog: false, tools:[CTest(deleteOutputFiles: true, failIfNotNew: true, pattern: 'build/Testing/**/Test.xml', skipNoTestFiles: false, stopProcessingIfError: true)]
            }
          }
        }
        stage('cuda-ndebug-vecgeom') {
          agent {
            docker {
              image 'celeritas/ci-jammy-cuda11:2023-08-02'
              label 'NVIDIA_Tesla_V100-PCIE-32GB && nvidia-docker && large_images'
            }
          }
          steps {
            sh 'entrypoint-shell ./scripts/ci/run-ci.sh ubuntu-cuda ndebug-vecgeom'
          }
          post {
            always {
              xunit reduceLog: false, tools:[CTest(deleteOutputFiles: true, failIfNotNew: true, pattern: 'build/Testing/**/Test.xml', skipNoTestFiles: false, stopProcessingIfError: true)]
            }
          }
        }
      }
    }
  }
}
// vim: set ft=groovy ts=2 sw=2 :
