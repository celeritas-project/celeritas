pipeline {
    triggers {
        issueCommentTrigger('.*do: test')
    }
    agent none

    environment {
        CTEST_ARGS = '--timeout 180 --no-compress-output -T Test --test-output-size-passed=65536 --test-output-size-failed=1048576'
    }
    stages {
        stage('Build') {
            parallel {
                stage('cuda-11') {
                    agent {
                        docker {
                            image 'celeritas/ci:cuda11-2'
                            // label 'NVIDIA_Tesla_V100-PCIE-32GB && nvidia-docker'
                            label 'sethrj'
                        }
                    }
                    steps {
                        sh 'rm -rf build && mkdir -p build'
                        dir('build') {
                            sh '''
. /etc/profile.d/celeritas_spack_env.sh
env
echo $0
cmake -G Ninja \
  -DCELERITAS_BUILD_DEMOS:BOOL=ON \
  -DCELERITAS_BUILD_TESTS:BOOL=ON \
  -DCELERITAS_USE_CUDA:BOOL=ON \
  -DCELERITAS_USE_Geant4:BOOL=ON \
  -DCELERITAS_USE_HepMC3:BOOL=OFF \
  -DCELERITAS_USE_MPI:BOOL=ON \
  -DCELERITAS_USE_ROOT:BOOL=ON \
  -DCELERITAS_USE_VecGeom:BOOL=ON \
  -DCELERITAS_DEBUG:BOOL=ON \
  -DCMAKE_BUILD_TYPE:STRING="Debug" \
  -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic -Werror" \
  -DCMAKE_CUDA_FLAGS="-arch=sm_70 -Werror all-warnings" \
  -DCMAKE_SHARED_LINKER_FLAGS:STRING="-Wl,--no-as-needed" \
  -DMPIEXEC_PREFLAGS="--allow-run-as-root" \
  ..
                            '''
                            sh 'entrypoint-shell ninja -v'
                            sh 'entrypoint-shell ctest $CTEST_ARGS'
                        }
                    }
                    post {
                        always {
                            xunit reduceLog: false, tools:[CTest(deleteOutputFiles: true, failIfNotNew: true, pattern: 'build/Testing/**/Test.xml', skipNoTestFiles: false, stopProcessingIfError: true)]
                        }
                    }
                }
            }
        }
    }
}

