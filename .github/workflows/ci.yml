name: ci

on:
  push:
    branches:
      - develop
      - backports/**
  pull_request:
    branches:
      - develop
      - backports/**

concurrency:
  group: ${{github.ref}}-${{github.event.pull_request.number || github.run_number}}-${{github.workflow}}
  cancel-in-progress: true

jobs:
  # TODO: skip tests if only `scripts` has changed (dorny/paths-filter)?
  # TODO: clang format 
  #  clang-format-check:
  #    name: Clang-Format Check
  #    runs-on: ubuntu-latest
  #    steps:
  #    - uses: actions/checkout@v3
  #    - name: Run clang-format style check for C/C++/CUDA
  #      uses: jidicula/clang-format-action@v4.11.0
  #      with:
  #        clang-format-version: '17'
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ['ubuntu-cuda']
        geometry: ['orange']
        buildtype: ['debug']
        special: [null]
        #        image: ['ubuntu-cuda', 'centos-rocm']
        #        buildtype: ['debug', 'ndebug']
        #        geometry: ['orange', 'vecgeom']
        #        special: [null]
        #        exclude:
        #          - image: 'centos-rocm'
        #            geometry: 'vecgeom'
        #        include:
        #          - image: 'centos-rocm'
        #            buildtype: 'asan'
        #          - image: 'centos-rocm'
        #            buildtype: 'debug'
        #            geometry: 'orange'
        #            special: 'minimal'
        #          - image: 'centos-rocm'
        #            buildtype: 'debug'
        #            special: 'float'
        #          - image: 'centos-rocm'
        #            buildtype: 'reldeb'
        #            geometry: 'geant4'
    env:
      ASAN_OPTIONS: "detect_leaks=0"
      CCACHE_DIR: "${{github.workspace}}/.ccache"
      CCACHE_MAXSIZE: "10G"
      CELER_TEST_STRICT: 1
      CMAKE_PRESET: >-
        ${{matrix.buildtype}}-${{matrix.geometry}}${{matrix.special && '-' || ''}}${{matrix.special}}
    container:
      image: >-
        docker.io/celeritas/${{
             matrix.image == 'ubuntu-cuda' && 'ci-jammy-cuda11:2023-03-13'
          || matrix.image == 'centos-rocm' && 'ci-centos7-rocm5:2022-12-14.2'
          || null
        }}
      # TODO: don't use a 'root' user
      # See https://github.com/actions/checkout/issues/956
      options: --user root
    steps:
      # TODO: use ccache
      #      - name: Cache ccache
      #        uses: actions/cache@v2
      #        with:
      #          path: ${{ env.CCACHE_DIR }}
      #          key: ccache-${{ matrix.distro }}-${{github.run_id}}
      #          restore-keys: ccache-${{ matrix.distro }}
      #      - name: Zero ccache stats
      #        run: |
      #          ccache -z
      - name: Check out Celeritas
        uses: actions/checkout@v3
        with:
          fetch-tags: true
      - name: Configure Celeritas
        run: |
          ln -fs scripts/cmake-presets/ci-${{matrix.image}}.json CMakeUserPresets.json
          cmake --preset=${CMAKE_PRESET}
      - name: Build Celeritas
        run: |
          cmake --build --preset=${CMAKE_PRESET}
      - name: Test Celeritas
        run: |
          ctest --timeout 180 --output-on-failure \
            --test-output-size-passed=65536 --test-output-size-failed=1048576
      - name: Install Celeritas
        run: |
          cmake --install .
          for exe in orange-update celer-export-geant celer-dump-data \
            celer-sim celer-g4; do
            test -x "../install/bin/${exe}"
          done
          "../install/bin/celer-sim" --version
      - name: Build examples
        run: |
          ./scripts/ci/test-examples.sh
# vim: set nowrap tw=100:
