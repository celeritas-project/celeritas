# Build directly on the GitHub runner with caching
name: build-ultralite
on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: build-ultralite-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}-${{github.workflow}}
  cancel-in-progress: false

jobs:
  linux:
    name: ultralite-ubuntu
    env:
      CCACHE_DIR: "${{github.workspace}}/.ccache"
      CCACHE_MAXSIZE: "50Mi"
      CMAKE_PRESET: ultralite
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get -q -y update
          sudo apt-get -q -y install \
            ccache cmake ninja-build
      - name: Check out Celeritas
        uses: actions/checkout@v4
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ${{env.CCACHE_DIR}}
          key: ccache-ultralite-ubuntu-${{github.run_id}}
          restore-keys: |
            ccache-ultralite
      - name: Zero ccache stats
        run: |
          ccache -z
      - name: Configure Celeritas
        run: |
          ln -fs scripts/cmake-presets/ci-ubuntu-github.json CMakeUserPresets.json
          cmake --preset=${CMAKE_PRESET} \
            -DCeleritas_GIT_DESCRIBE="${{github.event.pull_request
              && format(';-pr.{0};', github.event.pull_request.number)
              || format(';-{0};', github.ref_name)}}"
      - name: Build
        id: build
        working-directory: build
        run: |
          ninja
      - name: Run tests
        id: test
        env:
          CTEST_OUTPUT: "${{github.workspace}}/test-output/ctest/all.xml"
        run: |
          ctest --preset=${CMAKE_PRESET} 
      - name: Install
        working-directory: build
        run: |
          ninja install
      - name: Check installation
        working-directory: install
        run: |
          ./bin/celer-sim --version
      - name: Show ccache stats
        if: ${{!cancelled()}}
        run: |
          ccache -s
      - name: Upload ccache debug
        if: ${{env.CCACHE_DEBUG && !cancelled()}}
        uses: actions/upload-artifact@v4
        with:
          path: ${{env.CCACHE_DEBUGDIR}}
          name: ccache-debug-${{github.job}}
          overwrite: true
          retention-days: 7
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: >-
          ${{
            always()
            && (steps.unittest.outcome == 'success'
                || steps.unittest.outcome == 'failure')
          }}
        with:
          name: test-results-ultralite-ubuntu
          path: "test-output/**/*.xml"
          if-no-files-found: error
          retention-days: 1
  windows:
    name: ultralite-windows
    env:
      CCACHE_DIR: "${{github.workspace}}\\.ccache"
      CCACHE_MAXSIZE: "50Mi"
      CMAKE_PRESET: ultralite
    runs-on: windows-latest
    steps:
      - name: Install dependencies
        run: |
          choco install ninja ccache
      - name: Check out Celeritas
        uses: actions/checkout@v4
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ${{env.CCACHE_DIR}}
          key: ccache-ultralite-windows-${{github.run_id}}
          restore-keys: |
            ccache-ultralite
      - name: Zero ccache stats
        run: |
          ccache -z
      - name: Configure Celeritas
        shell: pwsh
        run: |
          Copy-Item scripts/cmake-presets/ci-windows-github.json -Destination CMakeUserPresets.json
          cmake --preset=$Env:CMAKE_PRESET `
            -DCeleritas_GIT_DESCRIBE="${{github.event.pull_request
              && format(';-pr.{0};', github.event.pull_request.number)
              || format(';-{0};', github.ref_name)}}"
      - name: Build all
        run: |
          cmake --build --preset=$Env:CMAKE_PRESET 
      - name: Test all
        id: test
        env:
          CTEST_OUTPUT: "${{github.workspace}}\\test-output\\ctest\\all.xml"
        run: |
          ctest --preset=$Env:CMAKE_PRESET
      - name: Show ccache stats
        if: ${{!cancelled()}}
        run: |
          ccache -s
      - name: Upload ccache debug
        if: ${{env.CCACHE_DEBUG && !cancelled()}}
        uses: actions/upload-artifact@v4
        with:
          path: ${{env.CCACHE_DEBUGDIR}}
          name: ccache-debug-${{github.job}}
          overwrite: true
          retention-days: 7
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: >-
          ${{
            always()
            && (steps.unittest.outcome == 'success'
                || steps.unittest.outcome == 'failure')
          }}
        with:
          name: test-results-ultralite-windows
          path: "test-output/**/*.xml"
          if-no-files-found: error
          retention-days: 1

# vim: set nowrap tw=100:
