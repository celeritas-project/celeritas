# Build directly on the GitHub runner with caching
name: build-spack
on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: build-spack-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}-${{github.workflow}}

env:
  SPACK_REF: 5fe93fee1eec46a0750bd340198bffcb92ff9eec # v0.22.0

jobs:
  spack:
    name: >-
      ${{format('{0}{1}{2}{3}{4}',
                matrix.geometry,
                matrix.special && '-' || '',
                matrix.special,
                matrix.geant && '-g4@' || '',
                matrix.geant)}}
    strategy:
      fail-fast: false
      matrix:
        geometry: ["vecgeom"]
        special: [null]
        geant: ["10.5", "10.6", "10.7", "11.0", "11.1", "11.2"]
        include:
          - geometry: "orange"
            special: "minimal"
            geant: null
          - geometry: "orange"
            special: "float"
            geant: "11.0"
          - geometry: "vecgeom"
            special: "clhep"
            geant: "11.0"
          - geometry: "geant4"
            special: null
            geant: "11.0"
    env:
      CCACHE_DIR: "${{github.workspace}}/.ccache"
      CCACHE_MAXSIZE: "100Mi"
      CMAKE_PRESET: >-
        ${{format('reldeb-{0}{1}{2}',
                  matrix.geometry,
                  matrix.special && '-' || '',
                  matrix.special)}}
      SPACK_VIEW: "/opt/spack-view"
      SPACK_BUILDCACHE: "celer-buildcache" # see spack.yaml
      CC: "clang-15"
      CXX: "clang++-15"
    runs-on: ubuntu-22.04
    continue-on-error: false
    steps:
      - name: Check out Celeritas
        uses: actions/checkout@v4
        with:
          fetch-depth: 255
          fetch-tags: true # to get version information
      - name: Setup Spack
        uses: spack/setup-spack@0ce61628ed8a32a5664cf01a0e0b5a4834a3b413 # 2024/03
        with:
          ref: ${{env.SPACK_REF}}
          buildcache: true
          color: true  
          path: spack-src
      - name: Initialize spack environment
        run: |
          # TODO: https://github.com/spack/spack/pull/43136
          curl -LfsS https://github.com/spack/spack/pull/43136.patch | git -C spack-src apply -
          cp scripts/ci/spack.yaml .
          if [ "${{matrix.geometry}}" == "vecgeom" ]; then
            spack -e . add vecgeom
          fi
          if [ "${{matrix.special}}" != "minimal" ]; then
            spack -e . add root
          fi
          if [ "${{matrix.geant}}" != "" ]; then
            spack -e . add geant4@${{matrix.geant}}
          fi
          spack -e . config add packages:all:require:"'%clang@15 target=x86_64_v3'"
          spack -e . compiler find
          # Add the spack ref so that updating spack will reconcretize
          echo "# Concretized with ${{env.SPACK_REF}}" >> spack.yaml
      - name: Cache concretization
        uses: actions/cache@v4
        with:
          path: spack.lock
          key: lock-${{hashFiles('spack.yaml')}}-${{github.run_id}}
          restore-keys: |
            lock-${{hashFiles('spack.yaml')}}
      - name: Concretize
        run: |
          spack -e . -v concretize
      - name: Install dependencies with Spack
        run: |
          spack -e . env depfile -o Makefile
          make -Orecurse -j $(($(nproc) + 1)) SPACK_INSTALL_FLAGS=--no-check-signature
      - name: Save Spack installation to build cache
        run: |
          spack -e . mirror set --push --oci-username ${{github.actor}} --oci-password "${{secrets.GITHUB_TOKEN}}" ${SPACK_BUILDCACHE}
          spack -e . buildcache push -j $(($(nproc) + 1)) --base-image ubuntu:22.04 --unsigned --update-index ${SPACK_BUILDCACHE}
        if: ${{github.event_name == 'push' && !cancelled()}}
      - name: Activate environment
        run: |
          test -d "${SPACK_VIEW}"
          echo "${SPACK_VIEW}/bin" >> $GITHUB_PATH
          echo "CMAKE_PREFIX_PATH=${SPACK_VIEW}:${CMAKE_PREFIX_PATH}" >> $GITHUB_ENV
          spack env activate . --sh > "${SPACK_VIEW}/rc"
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ${{env.CCACHE_DIR}}
          key: ccache-${{env.CMAKE_PRESET}}-${{matrix.geant}}-${{github.run_id}}
          restore-keys: |
            ccache-${{env.CMAKE_PRESET}}-${{matrix.geant}}
            ccache-${{env.CMAKE_PRESET}}
      - name: Zero ccache stats
        run: |
          ccache -z
      - name: Configure Celeritas
        run: |
          ln -fs scripts/cmake-presets/ci-ubuntu-github.json CMakeUserPresets.json
          cmake --preset=${CMAKE_PRESET} --log-level=VERBOSE
      - name: Build all
        working-directory: build
        run: |
          ninja -v -k0
      - name: Run tests
        working-directory: build
        continue-on-error: ${{matrix.geant != '11.0'}} # TODO: disable or fix failing tests
        run: |
          if [ "${{matrix.geant}}" == "11.0" ]; then
            # TODO: add 11.0.4 and clhep version to tests
            #export CELER_TEST_STRICT=1
            echo "warning: strict testing is disabled"
          fi
          ctest --parallel $(nproc) --timeout 15 --output-on-failure \
            --test-output-size-passed=32768 --test-output-size-failed=1048576
      - name: Install
        working-directory: build
        run: |
          ninja install
      - name: Check installation
        working-directory: install
        run: |
          for exe in orange-update celer-export-geant celer-dump-data \
            celer-sim celer-g4; do
            test -x "bin/${exe}"
          done
          ./bin/celer-sim --version
      - name: Build examples
        run: |
          . ${SPACK_VIEW}/rc
          ./scripts/ci/test-examples.sh
      - name: Show ccache stats
        if: ${{!cancelled()}}
        run: |
          ccache -s

# vim: set nowrap tw=100:
