//----------------------------------*-cc-*-----------------------------------//
// Copyright 2021-2022 UT-Battelle, LLC, and other Celeritas developers.
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: (Apache-2.0 OR MIT)
//---------------------------------------------------------------------------//
//! \file RelativisticBremInteract.cc
//! \note Auto-generated by gen-interactor.py: DO NOT MODIFY!
//---------------------------------------------------------------------------//
#include "base/Assert.hh"
#include "base/Range.hh"
#include "base/Types.hh"
#include "../detail/RelativisticBremLauncher.hh"

namespace celeritas
{
namespace generated
{
void relativistic_brem_interact(
    const detail::RelativisticBremHostRef& relativistic_brem_data,
    const ModelInteractRef<MemSpace::host>& model)
{
    CELER_EXPECT(relativistic_brem_data);
    CELER_EXPECT(model);

    detail::RelativisticBremLauncher<MemSpace::host> launch(relativistic_brem_data, model);
    #pragma omp parallel for
    for (size_type i = 0; i < model.states.size(); ++i)
    {
        ThreadId tid{i};
        launch(tid);
    }
}

} // namespace generated
} // namespace celeritas
