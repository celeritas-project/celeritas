//----------------------------------*-C++-*----------------------------------//
// Copyright 2022 UT-Battelle, LLC, and other Celeritas developers.
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: (Apache-2.0 OR MIT)
//---------------------------------------------------------------------------//
//! \file geometry/generated/BoundaryAction.cc
//! \note Auto-generated by gen-action.py: DO NOT MODIFY!
//---------------------------------------------------------------------------//
#include "BoundaryAction.hh"

#include "base/Assert.hh"
#include "base/Types.hh"
#include "sim/TrackLauncher.hh"
#include "../detail/BoundaryActionImpl.hh"

namespace celeritas
{
namespace generated
{
void BoundaryAction::execute(CoreHostRef const& data) const
{
    CELER_EXPECT(data);

    auto launch = make_track_launcher(data, detail::boundary_track);
    #pragma omp parallel for
    for (size_type i = 0; i < data.states.size(); ++i)
    {
        launch(ThreadId{i});
    }
}

} // namespace generated
} // namespace celeritas
