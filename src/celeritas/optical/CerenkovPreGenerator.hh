//----------------------------------*-C++-*----------------------------------//
// Copyright 2024 UT-Battelle, LLC, and other Celeritas developers.
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: (Apache-2.0 OR MIT)
//---------------------------------------------------------------------------//
//! \file celeritas/optical/CerenkovPreGenerator.hh
//---------------------------------------------------------------------------//
#pragma once

#include "celeritas/phys/ParticleTrackView.hh"

#include "CerenkovData.hh"
#include "CerenkovDndxCalculator.hh"
#include "OpticalDistributionData.hh"
#include "OpticalPropertyData.hh"

namespace celeritas
{
//---------------------------------------------------------------------------//
/*!
 * Sample the number of Cerenkov photons to be generated by
 * \c CerenkovGenerator and populate \c OpticalDistributionData values using
 * Param and State data.
 * \code
    CerenkovPreGenerator pre_cerenkov(particle_view,
                                      properties,
                                      shared,
                                      material_id,
                                      step_collector.get(tid));

    auto optical_generator_data = pre_cerenkov(rng);
    if (optical_generator_data)
    {
        CerenkovGenerator cerenkov_gen(... , optical_generator_data);
        cerenkov_gen(rng);
    }
 * \endcode
 */
class CerenkovPreGenerator
{
  public:
    // Construct with particle and material data
    CELER_FUNCTION
    CerenkovPreGenerator(std::shared_ptr<ParticleTrackView> particle_view,
                         NativeCRef<OpticalPropertyData> const& properties,
                         NativeCRef<CerenkovData> const& shared,
                         OpticalMaterialId mat_id,
                         OpticalStepCollectorData optical_step);

    // Return a populated distribution data for the Cerenkov Generator
    template<class Generator>
    OpticalDistributionData CELER_FUNCTION operator()(Generator& rng);

  private:
    std::shared_ptr<ParticleTrackView> particle_view_;
    OpticalMaterialId mat_id_;
    OpticalStepCollectorData step_collector_data_;
    CerenkovDndxCalculator dndx_calculator_;
};

//---------------------------------------------------------------------------//
}  // namespace celeritas
