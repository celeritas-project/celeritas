//----------------------------------*-C++-*----------------------------------//
// Copyright 2021-2022 UT-Battelle, LLC, and other Celeritas developers.
// See the top-level COPYRIGHT file for details.
// SPDX-License-Identifier: (Apache-2.0 OR MIT)
//---------------------------------------------------------------------------//
//! \file demo-loop/generated/ProcessInteractionsKernel.cc
//! \note Auto-generated by gen-demo-loop-kernel.py: DO NOT MODIFY!
//---------------------------------------------------------------------------//
#include "base/Assert.hh"
#include "base/Types.hh"
#include "sim/TrackLauncher.hh"
#include "../LDemoLauncher.hh"

using namespace celeritas;

namespace demo_loop
{
namespace generated
{
void process_interactions(
    const CoreParamsHostRef& params,
    const CoreStateHostRef& states)
{
    CELER_EXPECT(params);
    CELER_EXPECT(states);

    auto launch = make_track_launcher(params, states, process_interactions_track);
    #pragma omp parallel for
    for (size_type i = 0; i < states.size(); ++i)
    {
        launch(ThreadId{i});
    }
}

} // namespace generated
} // namespace demo_loop
